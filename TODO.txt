0. clean errors on shutdown
1. populate data in buffers

Make Const Buffer type not fixed for all renderables (template & generate POD type data when uploading)

check data locality?

Constant buffer index offsets will start breaking down when different renderable groups use different sizes of buffers,
will need to track progressive offset instead of assuming same size for each

remove duplication of PSO & Root signature between renderable object & renderable object groups
should only be stored once in the group

do a pass on what needs to be size_t / int16_t / int32_t

Resources:
1. create buffer (has a gpu address)
	1.1 eg: Upload buffer calls device->CreateCommittedResource
		Heap will be automatically handled, there's other ways of creating resources where you handle the heap memory yourself, but that's more complex
	1.2 map buffer to mapped data (get's the cpu pointer of the buffer)
	

2. create a Buffer View / descriptor (cpu address) with the gpu address of the resource
	2.1 get the "Resource" 's GPUVirtualAddress
	2.2 get the descriptor index within the descriptor heap
	2.3 call create buffer view

Questions :
-can we have multiple structured buffers in one buffer & have multiple views over them???
